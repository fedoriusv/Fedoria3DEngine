<technique name="skybox" version="100">
    <pass name="pass0">
        <uniforms>
            <var name="transform.projectionMatrix" type="mat4" val="transform.projectionMatrix"/>
            <var name="transform.modelMatrix" type="mat4" val="transform.modelMatrix"/>
            <var name="transform.viewMatrix" type="mat4" val="transform.viewMatrix"/>
            <var name="transform.viewPosition" type="vec3" val="transform.viewPosition"/>
        </uniforms>
        <attributes>
            <var name="positions" type="vec3" val="mesh.positions"/>
        </attributes>
        <samplers> 
            <var name="sampler0"/>
        </samplers>
        <renderstate>
            <polygonmode val="fill"/>
            <winding val="ccw"/>
            <culling val="false"/>
            <blending val="false" src="srcAlpha" dst="invSrcAlpha"/>
        </renderstate>
        <rendertarget>
            <var val="default"/>
        </rendertarget>
        <shaders>
            <var type="vertex" name="vskybox">
                <![CDATA[
                    #version 330
                    
                    #define POSITION    0

                    layout (location = POSITION) in vec3 positions;

                    struct Transform
                    {
                        mat4 projectionMatrix;
                        mat4 modelMatrix;
                        mat4 viewMatrix;
                        vec3 viewPosition;
                    };
                    uniform Transform transform;
                    
                    struct Vertex 
                    {
                        vec3 texCoord0;
                    };
                    out Vertex fragVertex;

                    void main()
                    {
                        fragVertex.texCoord0 = positions;
                        
                        mat4 skypos = transform.modelMatrix;
                        skypos[3].xyz = transform.viewPosition;
                        
                        vec4 vertex = skypos * vec4(positions, 1.0);
                        gl_Position = transform.projectionMatrix * transform.viewMatrix * vertex;
                    }
                ]]>
            </var>
            <var type="fragment" name="fskybox">
                <![CDATA[
                    #version 330

                    //uniform sampler2D sampler0;
                    uniform samplerCube sampler0;

                    struct Vertex 
                    {
                        vec3  texCoord0;
                    };

                    in  Vertex  fragVertex;
                    out vec4    fragColor;

                    void main()
                    {
                        fragColor = texture(sampler0, fragVertex.texCoord0);
                    }
                ]]>
            </var>
        </shaders>
    </pass>
</technique>
