<technique name="screen2D" version="100">
	
	<!-- Textures -->
	<textures>
    	<texture name="wall" file="textures/wall.bmp"/>
    	<texture name="box" file="textures/box.jpg"/>
	</textures>
	
	<!-- Render Targets -->
    <rendertargets>
        <target name="targetTest" x="0" y="0" width="1024" height="768" ratio="0.0" color="0xff00ff00">
            <color active="true" attach="1" clear="true" format="8888" output="texture"/>
            <depth active="true" clear="true" format="16" output="texture"/>
        </target>
    </rendertargets>

    <!-- Render Passes -->
	<pass name="pass0">
		<uniforms>
			<var name="transform.orthoMatrix" type="mat4" val="transform.orthoMatrix"/>
			<var name="transform.projectionMatrix" type="mat4" val="transform.projectionMatrix"/>
			<var name="transform.modelMatrix" type="mat4" val="transform.modelMatrix"/>
		</uniforms>
		<attributes>
			<var name="positions" type="vec3" val="mesh.positions"/>
			<var name="texture0" type="vec2" val="mesh.texture0"/>
		</attributes>
		<samplers>
            <var name="sampler0" val="targetTest" attachment="c0"/>
		</samplers>
		<renderstate>
        </renderstate>
		<rendertarget val="default"/>
        <lod geometry="0.0"/>
		<shaders>
			<var name="vscreen2D" type="vertex" >
				<![CDATA[
					#version 330
					#define POSITION 	0
					#define NORMAL 		2
					#define TEXCOORD0 	5

					layout (location = POSITION)  in vec3 positions;
					layout (location = TEXCOORD0) in vec2 texture0;

					struct Transform
					{
						mat4 orthoMatrix;
						mat4 modelMatrix;
						mat4 projectionMatrix;
					};
					uniform Transform transform;
					
					struct Vertex 
					{
						vec2  texCoord0;
					};
					out Vertex fragVertex;

					void main()
                    {
                        vec4 vertex = transform.modelMatrix * vec4(positions, 1.0);
						fragVertex.texCoord0 = texture0;
                        gl_Position = vertex;
					}
				]]>
			</var>
			<var name="fscreen2D" type="fragment" >
				<![CDATA[
					#version 330
					uniform sampler2D sampler0;

					struct Vertex 
					{
						vec2  texCoord0;
					};
					in 	Vertex 	fragVertex;
					out vec4 	fragColor;

					void main()
					{
						fragColor = texture(sampler0, fragVertex.texCoord0);
					}
				]]>
			</var>
		</shaders>
	</pass>
</technique>
