<technique name="simple" version="100">

    <!-- Render Passes -->
    <pass name="pass0">
        <uniforms>
			<var name="transform.projectionMatrix" val="transform.projectionMatrix"/>
			<var name="transform.modelMatrix" val="transform.modelMatrix"/>
			<var name="transform.viewMatrix" val="transform.viewMatrix"/>
        </uniforms>
        <attributes>
            <var name="position" type="vec3" val="mesh.position"/>
        </attributes>
        <samplers>
        </samplers>
        <renderstate>
            <polygonmode val="line"/>
            <winding val="ccw"/>
            <culling val="false"/>
            <blending val="false" src="srcAlpha" dst="invSrcAlpha"/>
            <depthWrite val="true"/>
            <depthTest val="lequal"/>
        </renderstate>
        <rendertarget>
            <var val="default"/>
        </rendertarget>
        <lod geometry="0.0"/>
        <shaders>
            <var type="vertex" name="vsimple">
                <![CDATA[
                    #define POSITION    0
                    
                    layout (location = POSITION) in vec3 position;
                    
                    layout(std430, binding = 0) buffer transform
                    {
                        mat4 projectionMatrix;
                        mat4 modelMatrix;
                        mat4 viewMatrix;
                    };
                    
                    void main()
                    {
                        vec4 vertex = transform.modelMatrix * vec4(position, 1.0);
                        gl_Position = transform.projectionMatrix * transform.viewMatrix * vertex;
                    }
                ]]>
            </var>
            <var type="fragment" name="fsimple">
                <![CDATA[
                    out vec4 fragColor;
                    
                    void main()
                    {
                        fragColor = vec4(1.0f, 1.0f, 1.0f, 1.0f);
                    }
                ]]>
            </var>
        </shaders>
    </pass>
</technique>
