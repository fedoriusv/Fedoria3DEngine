<technique name="simple" version="100">
    <!-- Render Passes -->
    <pass name="pass0">
        <uniforms>
			<var name="projectionMatrix" val="transform.projectionMatrix"/>
            <var name="modelMatrix" val="transform.modelMatrix"/>
            <var name="viewMatrix" val="transform.viewMatrix"/>
            <var name="finSize" type="float" val="5.5"/>
            <var name="finPosition" type="vec3" val="1.0, 1.0, 1.0"/>
        </uniforms>
        <attributes>
            <var name="position" type="vec3" val="mesh.position"/>
        </attributes>
        <samplers>
        </samplers>
        <renderstate>
            <polygonmode val="line"/>
            <winding val="ccw"/>
            <culling val="false"/>
            <blending val="false" src="srcAlpha" dst="invSrcAlpha"/>
            <depthWrite val="true"/>
            <depthTest val="lequal"/>
        </renderstate>
        <rendertarget>
            <var val="default"/>
        </rendertarget>
        <lod geometry="0.0"/>
        <shaders>
            <defines>
                <var name="TEST" val="1"/>
            </defines>
            <var type="vertex" name="vsimple">
                <![CDATA[
                    #version 450
                    #extension GL_ARB_separate_shader_objects : enable
                    
                    layout (location = 0) in vec3 inPosition;
                    
                    layout(std430, binding = 0) buffer transform
                    {
                        mat4 projectionMatrix;
                        mat4 modelMatrix;
                        mat4 viewMatrix;
                    };
                    
                    void main()
                    {
                        vec4 vertex = transform.modelMatrix * vec4(inPosition, 1.0);
                        gl_Position = transform.projectionMatrix * transform.viewMatrix * vertex;
                    }
                ]]>
            </var>
            <var type="fragment" name="fsimple">
                <![CDATA[
                    #version 450
                    #extension GL_ARB_separate_shader_objects : enable
                    
                    layout (location = 0) out vec4 outFragColor;
                    
                    void main()
                    {
                        outFragColor = vec4(1.0f, 1.0f, 1.0f, 1.0f);
                    }
                ]]>
            </var>
        </shaders>
    </pass>
</technique>
