<technique name="default" version="100">
	<pass name="pass0">
		<uniforms>
			<var name="projectionMatrix" type="mat4" val="transform.projectionMatrix"/>
			<var name="modelMatrix" type="mat4" val="transform.modelMatrix"/>
			<var name="viewMatrix" type="mat4" val="transform.viewMatrix"/>
			<var name="normalMatrix" type="mat4" val="transform.normalMatrix"/>
			<var name="viewPosition" type="vec3" val="transform.viewPosition"/>
		</uniforms>
		<attributes>
			<var name="positions" type="vec3" val="mesh.positions"/>
		</attributes>
		<samplers> 
			<var name="texture0"/>
		</samplers>
		<rendertarget val="default"/>
		<shaders>
			<var type="vertex" name="basic">
				<![CDATA[
					#version 330
					#define POSITION 	0

					layout (location = POSITION) in vec3 positions;

					struct Transform
					{
						mat4 modelMatrix;
						mat4 viewMatrix;
						mat4 projectionMatrix;
						mat4 normalMatrix;
						vec3 viewPosition;
					};

					uniform Transform transform;

					void main()
					{
						vec4 vertex = transform.modelMatrix * vec4(position, 1.0);
						gl_Position = transform.projectionMatrix * transform.viewMatrix * vertex;
					}
				]]>
			</var>
			<var type="fragment" name="basic">
				<![CDATA[
					#version 330
					out vec4 fragColor;

					void main()
					{
						float lerpValue = gl_FragCoord.y / 500.0f;
						fragColor = mix(vec4(1.0f, 1.0f, 1.0f, 1.0f), vec4(0.2f, 0.2f, 0.2f, 1.0f), lerpValue);
					}
				]]>
			</var>
		</shaders>
	</pass>
</technique>
