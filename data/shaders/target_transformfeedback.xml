<technique name="target_transformfeedback" version="100">

    <!-- Render Targets -->
    <rendertargets>
        <transformfeedback name="targetCalc" type="interleaved" mode="triangles">
                <var name="outValue" type="float" size="15"/>
        </transformfeedback>
    </rendertargets>
    
    <!-- Render Passes -->
    <pass name="pass0">
        <uniforms>
        </uniforms>
        <attributes>
            <var name="inValue" type="float" div="0"/>
        </attributes>
        <samplers>
        </samplers>
        <renderstate>
            <polygonmode val="fill"/>
            <winding val="cw"/>
            <culling val="back"/>
        </renderstate>
        <rendertarget>
            <var val="targetCalc"/>
        </rendertarget>
        <lod geometry="0.0"/>
        <advanced>
            <instanced val="25"/>
        </advanced>
        <shaders>
            <var type="vertex" name="vtarget_transformfeedback">
                <![CDATA[
                    #version 330
                    
                    layout (location = 0) in float inValue;
                    out float geoValue;
                    
                    void main()
                    {
                        geoValue = sqrt(inValue);
                    }
                ]]>
            </var>
            <var type="geometry" name="gtarget_transformfeedback">
                <![CDATA[
                    #version 330
                    
                    layout(points) in;
                    layout(triangle_strip, max_vertices = 3) out;
                    
                    in float[] geoValue;
                    layout (location = 1) out float outValue;
                    
                    void main() 
                    {
                        for (int i = 0; i < 3; i++)
                        {
                            outValue = geoValue[0] + i;
                            EmitVertex();
                        }
                        EndPrimitive();
                    }
                ]]>
            </var>
        </shaders>
    </pass>
</technique>
