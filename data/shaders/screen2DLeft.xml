<technique name="screen2DLeft" version="100">

    <!-- Render Targets -->
    <rendertargets>
        <target name="screen2DLeftTarget" x="0" y="0" width="512" height="368" ratio="0.0">
            <color color="0x00000000" clear="true">
                <attach active="true" val="0" format="rgba8u" output="texture"/>
            </color>
            <depth active="true" value="1.0" clear="true" format="depth24u" output="render"/>
        </target>
    </rendertargets>
    
    <!-- Render Passes -->
    <pass name="pass0">
        <uniforms>
            <var name="transform.modelMatrix" type="mat4" val="transform.modelMatrix"/>
        </uniforms>
        <attributes>
            <var name="position" type="vec3" val="mesh.position"/>
            <var name="texture0" type="vec2" val="mesh.texture0"/>
        </attributes>
        <samplers>
            <var name="leftScreen" val="screen2DLeftTarget" attachment="c0"/>
        </samplers>
        <renderstate>
            <polygonmode val="fill"/>
            <winding val="ccw"/>
            <culling val="false"/>
            <blending val="false" src="srcAlpha" dst="invSrcAlpha"/>
        </renderstate>
        <rendertarget>
            <var val="default"/>
        </rendertarget>
        <lod geometry="0.0"/>
        <shaders>
            <var name="vscreen2DLeft" type="vertex">
                <![CDATA[
                    #define POSITION    0
                    #define NORMAL      1
                    #define TEXCOORD0   2
                    
                    layout (location = POSITION)  in vec3 position;
                    layout (location = TEXCOORD0) in vec2 texture0;
                    
                    struct Transform
                    {
                        mat4 modelMatrix;
                    };
                    uniform Transform transform;
                    
                    struct Vertex
                    {
                        vec2 texCoord0;
                    };
                    out Vertex fragVertex;
                    
                    void main()
                    {
                        vec4 vertex = transform.modelMatrix * vec4(position, 1.0);
                        fragVertex.texCoord0 = texture0;
                        
                        gl_Position = vertex;
                    }
                ]]>
            </var>
            <var name="fscreen2DLeft" type="fragment">
                <![CDATA[
                    uniform sampler2D leftScreen;
                     
                    struct Vertex
                    {
                        vec2 texCoord0;
                    };
                    in  Vertex  fragVertex;
                    out vec4    fragColor;
                    
                    void main()
                    {
                        fragColor = texture(leftScreen, fragVertex.texCoord0);
                    }
                ]]>
            </var>
        </shaders>
    </pass>
</technique>
